h2 Section 2 - More Complex Queries

h3 Graph Patterns
p A set of triple patterns between curly braces {} is called a graph pattern. They are the parameter for each of the SPARQL query forms.

h3 Helpful keywords
ul
  li DISTINCT - eliminates duplicate results
  li UNION - combines multiple query results
  li LIMIT - only returns the specified amount of triples
  li FILTER - removes results that match the given pattern
hr
.query(style='white-space:pre;')
  |SELECT <b>DISTINCT</b> ?res WHERE {
  |&nbsp;&nbsp;&nbsp;&nbsp;?src ?rel SENATOR .
  |&nbsp;&nbsp;&nbsp;&nbsp;?src SPOUSE ?res .
  |}
hr
.query(style='white-space:pre;')
  |SELECT DISTINCT ?res WHERE {
  |&nbsp;&nbsp;&nbsp;&nbsp;?src ?rel SENATOR .
  |&nbsp;&nbsp;&nbsp;&nbsp;?src SPOUSE ?res .
  |}
  |<b>UNION</b>
  |{
  |&nbsp;&nbsp;&nbsp;&nbsp;?src ?rel SENATOR .
  |&nbsp;&nbsp;&nbsp;&nbsp;?src CHILD ?res .
  |}
hr
.query(style='white-space:pre;')
  |SELECT ?res WHERE {
  |&nbsp;&nbsp;&nbsp;&nbsp;?src ?rel SENATOR .
  |&nbsp;&nbsp;&nbsp;&nbsp;?src SPOUSE ?res .
  |} <b>LIMIT</b> 100
hr
.query(style='white-space:pre;')
  |SELECT ?res WHERE {
  |&nbsp;&nbsp;&nbsp;&nbsp;?src ?rel SENATOR .
  |&nbsp;&nbsp;&nbsp;&nbsp;?src SPOUSE ?res .
  |&nbsp;&nbsp;&nbsp;&nbsp;<b>FILTER</b>(STRLEN(?src)>10)
  |}

h3 Construct, Ask, Describe
p SPARQL is capable of much more than just retrieving data:
ul
  li the Construct query creates your own data
  li the Ask query checks if the specified triples exist
  li the Describe asks the source to send more info

h3 Construct
.query(style='white-space:pre;')
  |<b>CONSTRUCT</b> {?res ?rel ?src}
  |WHERE {
  |&nbsp;&nbsp;&nbsp;&nbsp;?src ?rel SENATOR .
  |&nbsp;&nbsp;&nbsp;&nbsp;?src SPOUSE ?res .
  |}

h3 Ask
.query(style='white-space:pre;')
  |<b>ASK</b> WHERE {
  |&nbsp;&nbsp;&nbsp;&nbsp;?src ?rel SENATOR .
  |&nbsp;&nbsp;&nbsp;&nbsp;?src SPOUSE ?res .
  |}
p This can be combined with FILTER to check if all the triples meet a criteria
.query(style='white-space:pre;')
  |<b>ASK</b> WHERE {
  |&nbsp;&nbsp;&nbsp;&nbsp;?src ?rel SENATOR .
  |&nbsp;&nbsp;&nbsp;&nbsp;?src SPOUSE ?res .
  |&nbsp;&nbsp;&nbsp;&nbsp;FILTER(STRLEN(?src)<16)
  |}

h3 Describe
p This is by far the simpliest query, however what information these queries return describe is not well-defined.
.query(style='white-space:pre;')
  |<b>DESCRIBE</b> SENATOR

h3 Try it yourself!
p Using these keywords even more complex queries can be created! Try out the following problems:
br
p Find every type of bird that live in Ohio and Indiana.
br
p Find 100 cities that are not in Ohio.
br
p Find every unique first name for students at OSU

h3 Answers
.query(style='white-space:pre;')
  |SELECT ?src WHERE {
  |&nbsp;&nbsp;&nbsp;&nbsp;?src InstanceOf Bird .
  |&nbsp;&nbsp;&nbsp;&nbsp;?src Lives Ohio.
  |}
  |UNION
  |{
  |&nbsp;&nbsp;&nbsp;&nbsp;?src InstanceOf Bird .
  |&nbsp;&nbsp;&nbsp;&nbsp;?src Lives Indiana.
  |}
br
.query(style='white-space:pre;')
  |SELECT ?src WHERE {
  |&nbsp;&nbsp;&nbsp;&nbsp;?src InstanceOf City.
  |&nbsp;&nbsp;&nbsp;&nbsp;?src InState ?res.
  |&nbsp;&nbsp;&nbsp;&nbsp;FILTER(!(?res="Ohio"))
  |} LIMIT 100
br
.query(style='white-space:pre;')
  |SELECT DISTINCT ?res WHERE {
  |&nbsp;&nbsp;&nbsp;&nbsp;?src StudentAt OSU.
  |&nbsp;&nbsp;&nbsp;&nbsp;?src FirstName ?res.
  |}
